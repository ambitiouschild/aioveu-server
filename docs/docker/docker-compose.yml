# 创建一个名为 "aioveu-server" 的桥接网络，在同一个网络中的容器可以通过容器名互相访问
networks:
  aioveu-server:
    driver: bridge

# 镜像image7个 1.mysql 2.nacos 3.seata 4.redis 5.minio 6.rabbitmq 7.xxl-job-admin
services:
  mysql:
    image: mysql:8.0.29
    container_name: aioveu-server-mysql
    restart: unless-stopped # 重启策略：除非手动停止容器，否则自动重启
    environment:
      - TZ=Asia/Shanghai
      - LANG= en_US.UTF-8
      - MYSQL_ROOT_PASSWORD=775825 #设置 root 用户的密码
    volumes:
      - ./mysql/conf/my.cnf:/etc/my.cnf # 挂载 my.cnf 文件到容器的指定路径
      - ./mysql/data:/var/lib/mysql # 持久化 MySQL 数据
      - ../sql/mysql8:/docker-entrypoint-initdb.d # 初始化 SQL 脚本目录
    ports:
      - 3308:3306 # 暴露 3306 端口
    networks:
      - aioveu-server # 加入 "aioveu-server" 网络

  nacos:  #docker exec -it aioveu-server-nacos-server ping mysql
    image: nacos/nacos-server:v2.2.3 # 使用 Nacos 2.2.3 镜像
    container_name: aioveu-server-nacos-server
    restart: unless-stopped # 重启策略：除非手动停止容器，否则自动重启
    environment:
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_DB_NAME=aioveu_nacos_config
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=775825
    volumes:
      - ./logs:/home/nacos/logs
    ports:
      - 8848:8848
      - 9848:9848
    networks:
      - aioveu-server # 加入 "aioveu-server" 网络
    depends_on:
      - mysql # 保证 MySQL 服务先启动

  # https://seata.apache.org/zh-cn/docs/ops/deploy-by-docker-compose#nacos%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83db%E5%AD%98%E5%82%A8
  seata:
    image: seataio/seata-server:1.7.1
    container_name: aioveu-server-seata-server
    restart: unless-stopped #  指定了容器的重启策略，除了手动停止容器，其他情况都自动重启容器
    environment:
      - STORE_MODE=db           # 使用数据库存储事务信息
      - SEATA_IP=aioveu-server-seata-server  #如果是在宿主机上运行，使用宿主机的IP；如果在容器内通信，建议使用服务名或容器IP
      - SEATA_PORT=8091
    volumes:
      - ./seata/config:/seata-server/resources
      - ./seata/logs:/root/logs/seata
    ports:
      - 8091:8091   # Seata服务端口
      - 7091:7091  # Seata控制台端口（1.7.1版本开始有控制台）
    networks:
      - aioveu-server
    depends_on:
      - nacos

  redis:
    image: redis:7.2.3
    container_name: aioveu-server-redis
    restart: unless-stopped # 重启策略：除非手动停止容器，否则自动重启
    command: redis-server /etc/redis/redis.conf  --appendonly no # 启动 Redis 服务并添加密码为--requirepass 775825，默认不开启 Redis AOF 方式持久化配置
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./redis/data:/data
      - ./redis/config/redis.conf:/etc/redis/redis.conf
    ports:
      - 6380:6379
    networks:
      - aioveu-server
        #NOAUTH Authentication required 应用程序未使用密码
      #WRONGPASS invalid username-password pair  密码不匹配
      #Connection refused: no further information 连接地址错误

  minio:
    image: minio/minio:latest
    container_name: aioveu-server-minio
    restart: unless-stopped # 重启策略：除非手动停止容器，否则自动重启
    command: server /data --console-address ":9090"
    ports:
      - 9001:9000
      - 9090:9090
    environment:
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8
      - MINIO_ROOT_USER=minioadminlss
      - MINIO_ROOT_PASSWORD=minioadminlss
    volumes:
      - ./minio/data:/data
      - ./minio/config:/root/.minio
    networks:
      - aioveu-server

  rabbitmq:
    image: rabbitmq:management
    container_name: aioveu-server-rabbitmq
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
      - RABBITMQ_DEFAULT_USER=adminlss
      - RABBITMQ_DEFAULT_PASS=adminlss
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - aioveu-server # 加入 "mall" 网络

  xxl-job-admin:
    image: xuxueli/xxl-job-admin:2.4.0   # https://hub.docker.com/r/xuxueli/xxl-job-admin/tags
    container_name: aioveu-server-xxl-job-admin
    restart: unless-stopped #  指定了容器的重启策略，除了手动停止容器，其他情况都自动重启容器
    environment:
      PARAMS: '--spring.datasource.url=jdbc:mysql://mysql:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai --spring.datasource.username=root --spring.datasource.password=123456 --spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver'
    volumes:
      - ./xxljob/logs:/data/applogs
    ports:
      - 8181:8080
    networks:
      - aioveu-server